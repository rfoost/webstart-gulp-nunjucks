var gulp = require('gulp'),
plumber = require('gulp-plumber'),
rename = require('gulp-rename');
var prefix = require('gulp-autoprefixer');
var babel = require('gulp-babel');
var concat = require('gulp-concat');
var uglify = require('gulp-uglify');
var imagemin = require('gulp-imagemin'),
cache = require('gulp-cache');
var sass = require('gulp-sass');
var browserSync = require('browser-sync');
var nunjucksRender = require('gulp-nunjucks-render');
var data = require('gulp-data');


// Nunjucks Requirement
function getDataForFile(file) {
return {
example: 'data loaded for ' + file.relative
};
}

// Build
gulp.task('nunjucks', function () {
return gulp.src('html/pages/*.html')
.pipe(data(getDataForFile))
.pipe(nunjucksRender({
path: 'html/templates/'
}))
.pipe(gulp.dest('dist'));
});

// Calls for nunjucks and then browserSync
gulp.task('nunjucks-rebuild', ['nunjucks'], function () {
browserSync.reload();
});

// Wait for Nunjucks-rebuild, then launch server
gulp.task('browser-sync', ['sass', 'nunjucks-rebuild'], function() {
browserSync({
server: {
baseDir: "./dist/"
},
notify: false
});
});

// Reload browserSync
gulp.task('bs-reload', function () {
browserSync.reload();
});

// Optimize Images
gulp.task('images', function(){
gulp.src('assets/img/**/*')
.pipe(cache(imagemin({ optimizationLevel: 3, progressive: true, interlaced: true })))
.pipe(gulp.dest('dist/assets/img/'));
});


/**
* Compile files from _scss into both _site/css (for live injecting) and site (for future jekyll builds)
*/
gulp.task('sass', function () {
return gulp.src('assets/css/main.scss')
.pipe(sass({
includePaths: ['css'],
onError: browserSync.notify
}))
.pipe(prefix(['last 15 versions', '> 1%', 'ie 8', 'ie 7'], { cascade: true }))
.pipe(gulp.dest('dist/assets/css'))
.pipe(browserSync.reload({stream:true}))
.pipe(gulp.dest('assets/css'));
});


gulp.task('watch', function(){
gulp.watch("assets/css/**", ['sass']);
gulp.watch("assets/js/**", ['scripts']);
gulp.watch("**/*.html", ['nunjucks-rebuild']);
});

/**
* Default task, running just `gulp` will compile the sass,
* compile the jekyll site, launch BrowserSync & watch files.
*/
gulp.task('default', ['browser-sync', 'watch']);
